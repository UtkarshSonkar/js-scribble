[{"content":"# Directions to use(Click to edit)\nBuilt interactive coding environment using React/Redux. In this, we can write Javascript, see it executed, and document it using markdown.\n\n- Click any text cell to edit (including this)\n- The code in each code editor is all joined together into one file. If defined a variable in editor-cell #1, refer in any other created or existing editor-cell to access it. Example editor-cell#1`const a=1;` use `console.log(a)` in another editor-cell.\n- Use `show()` function to display any JSX/React component/Objects/arrays/primitive values in editor-cell. This function is built in this environment and can be used multiple times.\n- Re-order or delete cells using the top right buttons in cells.\n- Add new cells by hovering on the divider between each cell.\n\nAll of the changes get saved to the file opened JScanvas with. So if `npx jscanvas @usonkar test.js` is run, then all of the text and code written will be saved to `test.js` file.","id":"123abc","type":"text"},{"content":"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Example = () => {\n  const [count, setCount] = useState(0);\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n};\nshow(<Example />);\n","id":"123rty","type":"code"},{"content":"//Insertion Sorting\nfunction insertionSort(arr, n) {\n  let i, key, j;\n  for (i = 1; i < n; i++) {\n    key = arr[i];\n    j = i - 1;\n    while (j >= 0 && arr[j] > key) {\n      arr[j + 1] = arr[j];\n      j = j - 1;\n    }\n    arr[j + 1] = key;\n  }\n}\n\nfunction printArray(arr, n) {\n  let i;\n  for (i = 0; i < n; i++) document.write(arr[i] + ' ');\n  document.write('<br>');\n}\n\nlet arr = [12, 11, 13, 5, 6];\nlet n = arr.length;\n\ninsertionSort(arr, n);\nprintArray(arr, n);","id":"123qwe","type":"code"}]